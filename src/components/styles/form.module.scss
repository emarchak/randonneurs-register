@use "theme";

$input-width: 40rem;

.form {
  padding: 0 0;
  margin: 0 auto;
  width: 100%;
}

.formWrapper {
  background-color: theme.get-color(secondary, light);
  border-top: 0.1rem solid theme.get-outline-color(secondary, light);
  border-bottom: 0.1rem solid theme.get-outline-color(secondary, light);
}

.button {
  box-shadow: theme.get-dropshadow();
  display: inline-block;
  padding: theme.get-spacing(small) theme.get-spacing(medium);
  color: theme.get-color(text);
  background: theme.get-color(text, lighter);
  border: 0.1rem solid theme.get-outline-color(text, lighter);
  box-shadow: theme.get-dropshadow();
  @include theme.border-radius();
  text-align: center;

  width: 100%;
  transition: all 250ms ease-in-out, transform 150ms ease;
  -webkit-appearance: none;
  -moz-appearance: none;

  &:hover:enabled,
  &:focus:enabled {
    cursor: pointer;
    background-color: theme.get-hover-color(text, lighter);
  }

  &:active {
    box-shadow: theme.get-dropshadow(pressed);
  }

  &:focus {
    outline: none;
    border-color: theme.get-color(text, light);
  }

  &:disabled {
    opacity: 60%;
  }

  @include theme.media(large) {
    width: auto;
  }
}

.primaryButton {
  background: theme.get-color(primary, dark);
  border-color: theme.get-outline-color(primary, dark);

  &:hover:enabled,
  &:focus:enabled {
    background-color: theme.get-hover-color(primary, dark);
  }

  &:focus {
    border-color: theme.get-outline-color(primary, darkest);
  }
}

.secondaryButton {
  background: theme.get-color(secondary, light);
  border-color: theme.get-outline-color(secondary, light);

  &:hover:enabled,
  &:focus:enabled {
    background-color: theme.get-hover-color(secondary, light);
  }

  &:focus {
    border-color: theme.get-outline-color(secondary);
  }
}

.smallButton {
  padding: theme.get-spacing(xsmall) 0;
}

.blockButton {
  display: block;
  padding-left: 0;
  padding-right: 0;
}

.loadingButton {
  &:hover,
  &:focus {
    cursor: wait;
  }

  box-shadow: theme.get-dropshadow(pressed);
  outline: none;
  border-color: theme.get-color(text, light);
}

.fieldset {
  border: 0;
  padding-top: theme.get-spacing();
  width: 100%;
}

.input {
  background-color: theme.get-color(background);
  height: get-font-size(large);
  padding: 0 theme.get-spacing(small);
  border: 0.1rem solid theme.get-color(secondary);
  @include theme.border-radius();

  &:focus {
    outline-width: 0;
    border-color: theme.get-color(secondary, darkest);
  }

  &:disabled {
    border-color: theme.get-color(secondary, light);
    background-color: theme.get-color(text, lightest);
  }
  @include theme.media(large) {
    max-width: $input-width;
  }
}

.help {
  display: block;
  font-size: get-font-size(small);
  color: theme.get-color(text, subtle);
}

.help,
.inputText,
.inlineInputs {
  width: calc(100% - #{theme.get-spacing(small) * 2});
}

.textField {
  height: calc(#{theme.get-font-size(large)} * 2);
  padding: theme.get-spacing(small);
}

.inlineInputs {
  display: flex;
  width: 100%;
  margin: 0;

  > * {
    padding-left: theme.get-spacing(small);
    flex-grow: 1;
  }

  > *:first-child {
    padding-left: 0;
  }

  .inputText {
    width: 100%;
  }
}

.select {
  background-image: linear-gradient(
      45deg,
      transparent 50%,
      theme.get-color(secondary, light) 50%
    ),
    linear-gradient(135deg, theme.get-color(secondary, light) 50%, transparent 50%),
    linear-gradient(to right, #ccc, #ccc);
  background-position: calc(100% - 20px) calc(1em + 2px),
    calc(100% - 15px) calc(1em + 2px), calc(100% - 2.5em) 0.4em;
  background-size: 5px 5px, 5px 5px, 1px 1.5em;
  background-repeat: no-repeat;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 100%;
  height: 2.41rem;
  max-width: $input-width + 1.65rem;
  &:disabled {
    opacity: 1;
  }
}

.label {
  display: block;
  font-size: get-font-size(small);
}

.hidden {
  visibility: hidden;
  height: 0;
}

.error-list {
  list-style: none;
  margin-bottom: theme.get-spacing();
  margin-left: 0;
}

.error {
  margin-bottom: theme.get-spacing(small);
  &:before {
    content: "âœ—";
    margin-right: 0.25rem;
  }
}

.dateTimeField {
  @include theme.no-space-text;
  p {
    margin-bottom: 0;
  }
  @include theme.media(large) {
    max-width: 41.6rem;
  }
}

.date-input-overrides {
  display: block !important;

  input {
    width: calc(100% - #{theme.get-spacing(small) * 2});
  }
}

.checkbox {
  font-size: 2em;
}

.checkboxLabel {
  display: inline;
  padding-left: 0.6em;
  &:hover {
    cursor: pointer;
  }
}

.radio {
  margin-right: 0.1rem line-;
}
.radioLabel {
  display: block;
}

.loading-wrapper {
  text-align: center;
}

.loading {
  display: inline-block;
  position: relative;
  width: 1rem;
  height: 1rem;

  div {
    position: absolute;
    top: 1rem;
    width: 0.5rem;
    height: 0.5rem;
    border-radius: 50%;
    background: theme.get-color(text);
    animation-timing-function: cubic-bezier(0, 1, 1, 0);
  }
  div:nth-child(1) {
    left: 0.5rem;
    animation: loading1 0.6s infinite;
  }
  div:nth-child(2) {
    left: 0.5rem;
    animation: loading2 0.6s infinite;
  }
  div:nth-child(3) {
    left: 2rem;
    animation: loading2 0.6s infinite;
  }
  div:nth-child(4) {
    left: 3.5rem;
    animation: loading3 0.6s infinite;
  }
}
@keyframes loading1 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes loading3 {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}
@keyframes loading2 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(24px, 0);
  }
}

.radioTable {
  &Wrapper {
    background-color: theme.get-color(background);
    border: 0.1rem solid theme.get-color(secondary);
    overflow: hidden;
    @include theme.border-radius();

    overflow-y: scroll;
    max-height: 30rem;
    max-height: 60vh;
    box-shadow: inset theme.get-dropshadow();
    margin-bottom: theme.get-spacing();
  }

  &Empty {
    text-align: center;
  }

  thead th {
    padding: theme.get-spacing(small) theme.get-spacing(small);
    background-color: theme.get-color(text, lighter);
    font-size: get-font-size(small);
    position: sticky;
    top: 0;
  }

  .cellSelector {
    text-align: center;
  }

  tr {
    &:hover,
    &:focus {
      background-color: theme.get-color(background, darken);
      cursor: pointer;
    }
  }

  tr[data-checked="true"] {
    &,
    &:hover,
    &:focus {
      background-color: theme.get-color(primary);
      outline: 1px solid theme.get-color(primary, dark);
    }
  }

  @include theme.media(medium) {
    input {
      position: absolute;
      display: block;
      top: 1.8em;
      left: theme.get-spacing();
    }

    td {
      padding-left: theme.get-spacing(large);
    }
  }
}
